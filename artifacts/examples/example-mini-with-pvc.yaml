---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: fs-reader
spec:
  capacity:
    storage: 100Mi
  claimRef:
    name: fs-reader
    namespace: default
  accessModes:
    - ReadWriteMany
  nfs:
    server: 172.31.0.7
    path: "/reader"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fs-reader
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: fs-writer
spec:
  capacity:
    storage: 100Mi
  claimRef:
    name: fs-writer
    namespace: default
  accessModes:
    - ReadWriteMany
  nfs:
    server: 172.31.0.7
    path: "/writer"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fs-writer
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: 100Mi
---
apiVersion: idx.inspur.com/v1alpha1
kind: FileSync
metadata:
  name: example-mini-pvc
spec:
  global:
    mq: NATS
  nats:
    ip: "nats-edge.default.svc.cluster.local"
    port: 4222
    user: s1
    password: s1
  reader:
    nodeSelector: 
      kubernetes.io/hostname: centos78-0
    image: "filereader:8.1.0-20210527-centos"
    srcPath: "/example-mini/src"
    srcPathPVC: "fs-reader"     # 如果在同一个 reader 中使用同一个 PVC, 那么就读取 PVC 路径下的 src 目录
    logPath: "/example-mini/log"
    logPathPVC: "fs-reader"     # 如果在同一个 reader 中使用同一个 PVC, 那么会向 PVC 路径下的 log 目录写入日志
    dataTopic: "examplepvc"     # streamName
    dataSliceSize: "1m"
    fmodeRead: 0
    userRead: 0
    logsyncMode: 0
  writer:
    nodeSelector: 
      kubernetes.io/hostname: centos78-1
    image: "filewriter:8.1.0-20210527-centos"
    dataTopic: "examplepvc.examplepvc"  # means streamName.consumerName. streamName and consumerName should be the same
    rcvPath: "/example-mini/rcv"
    rcvPathPVC: "fs-writer"     # 在同一个 writer 中独享 PVC 时, 则整个 PVC 会作为目标目录被使用
    fmodeWrite: 0
    userWrite: 0
